apiVersion: v1
kind: Secret
metadata:
  name: temporal-postgres-password
  namespace: openline
type: Opaque
data:
  PASSWORD: bG9jYWxQYXNzd29yZA==
---  
apiVersion: v1
kind: ConfigMap
metadata:
  name: temporal-postgres-init
  namespace: openline
data:
  init-visibility-db.sh: |
    #!/bin/bash
    set -e

    psql -v ON_ERROR_STOP=1 --username "$POSTGRES_USER" --dbname "$POSTGRES_DB" <<-EOSQL
      CREATE DATABASE internal_temporal_visibility;
      GRANT ALL PRIVILEGES ON DATABASE internal_temporal_visibility TO "$POSTGRES_USER";
    EOSQL
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: temporal-postgres
  namespace: openline
spec:
  replicas: 1
  selector:
    matchLabels:
      service: temporal-postgres
  template:
    metadata:
      labels:
        service: temporal-postgres
    spec:
      containers:
        - name: temporal-postgres
          image: postgres:13
          ports:
            - containerPort: 5432
          volumeMounts:
          - name: temporal-postgres-init
            mountPath: /docker-entrypoint-initdb.d
          env:
            - name: POSTGRES_DB
              value: internal_temporal
            - name: POSTGRES_USER
              value: temporaluser
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: temporal-postgres-password
                  key: PASSWORD
      volumes:
      - name: temporal-postgres-init
        configMap:
          name: temporal-postgres-init
---
apiVersion: v1
kind: Service
metadata:
  name: temporal-postgres
  namespace: openline
spec:
  type: ClusterIP
  ports:
    - port: 5432
  selector:
    service: temporal-postgres
---
apiVersion: temporal.io/v1beta1
kind: TemporalCluster
metadata:
  name: temporal
  namespace: openline
spec:
  version: 1.20.0
  numHistoryShards: 1
  ui:
    enabled: true
    # You can specify ui version if needed.
    # Check available tag you can check by link below
    # https://hub.docker.com/r/temporalio/ui/tags
    version: 2.15.0
  admintools:
    enabled: true
  persistence:
    defaultStore:
      sql:
        user: temporaluser
        pluginName: postgres
        databaseName: internal_temporal
        connectAddr: temporal-postgres:5432
        connectProtocol: tcp
      passwordSecretRef:
        name: temporal-postgres-password
        key: PASSWORD
    visibilityStore:
      sql:
        user: temporaluser
        pluginName: postgres
        databaseName: internal_temporal_visibility
        connectAddr: temporal-postgres:5432
        connectProtocol: tcp
      passwordSecretRef:
        name: temporal-postgres-password
        key: PASSWORD
  dynamicConfig:
    pollInterval: 10s
    values:
      matching.numTaskqueueReadPartitions:
      - value: 5
        constraints: {}
      matching.numTaskqueueWritePartitions:
      - value: 5
        constraints: {}
---
apiVersion: temporal.io/v1beta1
kind: TemporalNamespace
metadata:
  name: default
  namespace: openline
spec:
  clusterRef:
    name: temporal
  description: Default namespace
  retentionPeriod: 168h #7 days
  allowDeletion: true
---
apiVersion: v1
kind: Service
metadata:
  name: temporal-ui
spec:
  type: NodePort
  ports:                         
    - name: http
      port: 8080
      targetPort: 8080
  selector:
    service: temporal-ui
