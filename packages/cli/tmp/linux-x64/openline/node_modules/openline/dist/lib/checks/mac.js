"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.dependencies = void 0;
const tslib_1 = require("tslib");
//import * as shell from 'shelljs'
const xcode = tslib_1.__importStar(require("./xcode"));
const brew = tslib_1.__importStar(require("./homebrew"));
const docker = tslib_1.__importStar(require("./docker"));
const colima = tslib_1.__importStar(require("./colima"));
const kubectl = tslib_1.__importStar(require("./kubectl"));
const helm = tslib_1.__importStar(require("./helm"));
function dependencies(verbose) {
    console.log('‚è≥ Openline dependency check...');
    var falseCount = 0;
    let result = false;
    let need = {
        'xcode': false,
        'homebrew': false,
        'docker': false,
        'colima': false,
        'kubectl': false,
        'helm': false
    };
    // Checking if dependency installed
    need['xcode'] = xcode.xcodeCheck();
    if (!need.xcode) {
        falseCount++;
    }
    need['homebrew'] = brew.brewCheck();
    if (!need.homebrew) {
        falseCount++;
    }
    need['docker'] = docker.dockerCheck();
    if (!need.docker) {
        falseCount++;
    }
    need['colima'] = colima.colimaCheck();
    if (!need.colima) {
        falseCount++;
    }
    need['kubectl'] = kubectl.kubeCheck();
    if (!need.kubectl) {
        falseCount++;
    }
    need['helm'] = helm.helmCheck();
    if (!need.helm) {
        falseCount++;
    }
    // Verbose logging of dependency check
    if (verbose) {
        console.log(need);
    }
    // Installing necessary dependencies
    if (falseCount != 0) {
        console.log('ü¶¶ Installing dependencies...');
        // Xcode
        if (!need.xcode) {
            console.log('Installing Xcode');
            let xResult = xcode.installXcode();
            if (xResult) {
                console.log('‚úÖ Xcode');
            }
            else {
                console.log('‚ùå Xcode install failed');
                return result;
            }
        }
        // Homebrew
        if (!need.homebrew) {
            console.log('Installing homebrew');
            let hbResult = brew.installBrew();
            if (hbResult) {
                console.log('‚úÖ Homebrew');
            }
            else {
                console.log('‚ùå Homebrew install failed');
                return result;
            }
        }
        // Docker
        if (!need.docker) {
            console.log('Installing docker');
            let dResult = docker.installDocker();
            if (dResult) {
                console.log('‚úÖ docker');
            }
            else {
                console.log('‚ùå docker install failed');
                return result;
            }
        }
        // Colima
        if (!need.colima) {
            console.log('Installing colima');
            let cResult = colima.installColima();
            if (cResult) {
                console.log('‚úÖ colima');
            }
            else {
                console.log('‚ùå colima install failed');
                return result;
            }
        }
        // kubectl
        if (!need.kubectl) {
            console.log('Installing kubectl');
            let kResult = kubectl.installKube();
            if (kResult) {
                console.log('‚úÖ kubectl');
            }
            else {
                console.log('‚ùå kubectl install failed');
                return result;
            }
        }
        // Helm
        if (!need.helm) {
            console.log('Installing helm');
            let hResult = helm.installHelm();
            if (hResult) {
                console.log('‚úÖ helm');
            }
            else {
                console.log('‚ùå helm install failed');
                return result;
            }
        }
    }
    result = true;
    return (result);
}
exports.dependencies = dependencies;
