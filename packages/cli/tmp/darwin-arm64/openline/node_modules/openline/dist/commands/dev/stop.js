"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
const core_1 = require("@oclif/core");
const error = tslib_1.__importStar(require("../../lib/dev/errors"));
const shell = tslib_1.__importStar(require("shelljs"));
class DevStop extends core_1.Command {
    async run() {
        const { args, flags } = await this.parse(DevStop);
        let verbose = flags.verbose;
        if (flags.all) {
            this.log('ðŸ¦¦ Stopping all Openline services...');
        }
        else if (args.app == 'customer-os') {
            this.log('ðŸ¦¦ Stopping customerOS...');
        }
        let reset = shell.exec('colima delete -f', { silent: !verbose });
        if (reset.code == 0) {
            'âœ… all Openline services successfully stopped';
        }
        else {
            error.logError(reset.stderr, 'Run this command to nuke your instance and start over => colima delete');
        }
    }
}
exports.default = DevStop;
DevStop.description = 'Stop and tear down the Openline development server';
DevStop.examples = [
    '<%= config.bin %> <%= command.id %>',
];
DevStop.flags = {
    all: core_1.Flags.boolean({ char: 'a' }),
    verbose: core_1.Flags.boolean({ char: 'v' }),
};
DevStop.args = [
    {
        name: 'app',
        required: false,
        description: 'the Openline application you would like to stop',
        default: 'customer-os',
        options: ['customer-os']
    }
];
